// ===============================================
// üéØ ANALISADOR DE INTEN√á√ÉO COM IA (VERS√ÉO FINAL)
// ===============================================
const fetch = require('node-fetch');

// FUN√á√ÉO AUXILIAR QUE MONTA O PROMPT
function buildAnalysisPrompt(messageContent) {
    const agora = new Date();
    const hoje = new Date(agora.toLocaleString("en-US", { timeZone: "America/Sao_Paulo" }));
    const dataAtual = hoje.toLocaleDateString('pt-BR', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' });

    return `
CONTEXTO TEMPORAL E REGRAS:
- HOJE √â: ${dataAtual.toUpperCase()} (Fuso Hor√°rio de Bras√≠lia, GMT-3).
- REGRA DE OURO: NUNCA sugira ou confirme agendamentos para datas ou hor√°rios que j√° passaram. Sempre ofere√ßa op√ß√µes para o FUTURO.
- REGRA DE SEGURAN√áA: NUNCA invente nomes de profissionais ou hor√°rios. Se voc√™ n√£o tem a informa√ß√£o real, diga que precisa verificar no sistema.

TAREFA PRIM√ÅRIA: Analise a MENSAGEM abaixo e classifique a inten√ß√£o do usu√°rio.
MENSAGEM: "${messageContent}"

Responda APENAS com uma das seguintes categorias de inten√ß√£o:
- "scheduling": Se o usu√°rio quer agendar, marcar, ver hor√°rios, ou perguntar sobre profissionais dispon√≠veis.
- "rescheduling": Se o usu√°rio quer REMARCAR.
- "cancellation": Se o usu√°rio quer CANCELAR.
- "inquiry": Se o usu√°rio est√° perguntando sobre um agendamento que j√° existe.
- "general": Para qualquer outra coisa (sauda√ß√µes, etc.).

Qual √© a inten√ß√£o?`;
}

// FUN√á√ÉO PRINCIPAL DE AN√ÅLISE (A √öNICA QUE PRECISAMOS)
async function analyze(messageContent, context = {}) {
    try {
        const prompt = buildAnalysisPrompt(messageContent);

        const response = await fetch(`${process.env.DEEPSEEK_BASE_URL}/chat/completions`, {
            method: 'POST',
            headers: {
                'Authorization': `Bearer ${process.env.DEEPSEEK_API_KEY}`,
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                model: 'deepseek-chat',
                messages: [{ role: 'user', content: prompt }],
                temperature: 0.2,
            })
        });

        if (!response.ok) {
            console.error('‚ùå Erro na API DeepSeek:', response.statusText);
            return { intention: 'general', provider: 'fallback' };
        }

        const aiResult = await response.json();
        const rawContent = (aiResult.choices?.[0]?.message?.content || '').trim().replace(/"/g, ''); // Limpa aspas
        console.log(`ü§ñ Resposta crua da IA: "${rawContent}"`);

        // A IA est√° respondendo com texto simples, ent√£o vamos tratar como texto.
        let intention = 'general'; // Padr√£o
        if (rawContent.toLowerCase().includes('scheduling')) {
            intention = 'scheduling';
        } else if (rawContent.toLowerCase().includes('cancellation')) {
            intention = 'cancellation';
        } // Adicione outros 'else if' se necess√°rio

        const analysis = {
            intention: intention,
            confidence: 0.9,
            provider: 'deepseek-text',
            timestamp: new Date().toISOString()
        };
        
        return analysis;

    } catch (error) {
        console.error('‚ùå Erro fatal na fun√ß√£o analyze:', error);
        return {
            intention: 'general',
            confidence: 0,
            reasoning: 'Erro na execu√ß√£o da an√°lise',
            provider: 'error-fallback'
        };
    }
}

// EXPORTA√á√ÉO CORRETA
module.exports = {
    analyze // ‚úÖ EXPORTANDO A FUN√á√ÉO 'analyze'
};